
/** Specipify namespace for code-generation */
namespace * Greeting;

/** The greeting service definition. */
rrservice Greeter {
  /** Sends a greeting. */
  @10000 SayHello(streaming HelloRequest) streaming :HelloResponse;
}

/** The request message containing the user's name. */
struct HelloRequest {
  @1 name :string;
}

/** The response message containing the greetings. */
struct HelloReply {
  @1 message :string;
}


// Server related service implementation

public class GreeterService : Greeter.GreeterBase
{
    private readonly ILogger<GreeterService> _logger;

    public GreeterService(ILogger<GreeterService> logger)
    {
        _logger = logger;
    }

    public override Task<HelloReply> SayHello(HelloRequest request, ServerCallContext context)
    {
        return Task.FromResult(new HelloReply
        {
            Message = "Hello " + request.Name
        });
    }
}


// Client

using var channel = GrpcChannel.ForAddress("https://localhost:5001");
var client = new Greeter.GreeterClient(channel);
var reply = await client.SayHelloAsync(new HelloRequest { Name = "GreeterClient" });
